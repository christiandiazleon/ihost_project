# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-17 22:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=40, unique=True)),
                ('display_name', models.CharField(max_length=140)),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=4, verbose_name='genero')),
                ('country_of_origin', django_countries.fields.CountryField(max_length=2)),
                ('bio', models.CharField(blank=True, default='', max_length=140)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_of_birth', models.DateField(blank=True, help_text='Por favor use el siguiente formato: <em>DD/MM/YYYY</em>.', null=True, verbose_name='Fecha de nacimiento')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios en la plataforma',
                'db_table': 'auth_user',
            },
        ),
    ]
