# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-16 22:38
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Required. Letters, digits and @/./+/-/_ only.', max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid email address.', 'invalid')])),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('display_name', models.CharField(max_length=140)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default=False, max_length=10, verbose_name='Gender')),
                ('country_of_origin', django_countries.fields.CountryField(max_length=2)),
                ('city_of_origin', models.CharField(max_length=255)),
                ('country_current_residence', django_countries.fields.CountryField(max_length=2)),
                ('city_current_residence', models.CharField(max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Please use the following format: <em>+Country Code-Number</em>.', max_length=128)),
                ('address', models.CharField(max_length=128, verbose_name='address')),
                ('bio', models.CharField(blank=True, default='', max_length=140)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='Photo')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('is_student', models.BooleanField(default=False, help_text='Student profile', verbose_name='Student')),
                ('is_professor', models.BooleanField(default=False, help_text='Professor profile', verbose_name='Professor')),
                ('is_executive', models.BooleanField(default=False, help_text='Executive profile', verbose_name='Executive')),
                ('is_study_host', models.BooleanField(default=False, help_text='Study host profile', verbose_name='Study host')),
                ('is_innovation_host', models.BooleanField(default=False, help_text='Innovation host profile', verbose_name='Innovation host')),
                ('is_hosting_host', models.BooleanField(default=False, help_text='Hosting host profile', verbose_name='Hosting host')),
                ('is_entertainment_host', models.BooleanField(default=False, help_text='Entertainment host profile', verbose_name='Entertainment host')),
                ('is_other_services_host', models.BooleanField(default=False, help_text='Other services host profile', verbose_name='Other services host')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios en la plataforma',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='EntertainmentHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de entretenimiento',
            },
        ),
        migrations.CreateModel(
            name='ExecutiveProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('occupation', models.CharField(blank=True, max_length=255, verbose_name='Occupation')),
                ('enterprise_name', models.CharField(max_length=255, verbose_name='Company to which you are linked')),
                ('companies_to_visit', models.CharField(max_length=255, verbose_name='Companies to Visit')),
                ('educational_titles', models.CharField(max_length=255)),
                ('complete_studies_school', models.CharField(max_length=255, verbose_name='Institution where completed his previous studies')),
                ('innovation_topics_choice', models.CharField(max_length=255, verbose_name='Areas of innovation of your choice')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de ejecutivos',
            },
        ),
        migrations.CreateModel(
            name='HostingHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('stars', models.PositiveIntegerField(blank=True, help_text='Number of stars', null=True, verbose_name='Stars')),
                ('photography', models.ImageField(blank=True, null=True, upload_to='hostinghosts', verbose_name='Photo')),
                ('additional_description', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de hospedaje',
            },
        ),
        migrations.CreateModel(
            name='InnovationHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de innovaci√≥n',
            },
        ),
        migrations.CreateModel(
            name='OtherServicesHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de servicios varios',
            },
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('occupation', models.CharField(max_length=255)),
                ('origin_education_school', models.CharField(max_length=128, verbose_name='Origin education institute')),
                ('current_education_school', models.CharField(max_length=128, verbose_name='Institution of education to which is linked in the current residence')),
                ('educational_titles', models.CharField(max_length=255)),
                ('complete_studies_school', models.CharField(max_length=255, verbose_name='Institution where completed his previous studies')),
                ('knowledge_topics_choice', models.CharField(max_length=255, verbose_name='Areas of knowledge of your choice')),
                ('research_groups', models.CharField(max_length=255, verbose_name='Research groups to which it belongs')),
                ('autorship_publications', models.CharField(max_length=255, verbose_name='Publications of its authorship')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de profesores',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('origin_education_school', models.CharField(max_length=128, verbose_name='Origin education institute')),
                ('current_education_school', models.CharField(max_length=128, verbose_name='Institution of education to which is linked in the current residence')),
                ('extra_occupation', models.CharField(max_length=128, verbose_name='Extra occupation')),
                ('educational_titles', models.CharField(max_length=255)),
                ('complete_studies_school', models.CharField(max_length=255, verbose_name='Institution where completed his previous studies')),
                ('knowledge_topics_choice', models.CharField(max_length=255, verbose_name='Areas of knowledge of your choice')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de estudiantes',
            },
        ),
        migrations.CreateModel(
            name='StudyHostProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('institution_type', models.CharField(choices=[('UNIVERSITY', 'University'), ('TECH_SCHOOL', 'Technological School'), ('UNIV_INST', 'University Institution'), ('PROF_TECH_INST', 'Professional Technological Institution'), ('CONTINUAL_EDUCATION_CENTER', 'Continual Education Center')], max_length=255, verbose_name='Institution Type')),
                ('institute_character', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MIXED', 'Private - Public')], max_length=7, verbose_name='Character of the institution')),
                ('high_quality_accreditations', models.CharField(max_length=255, verbose_name='Accreditations of high quality')),
                ('students_number', models.CharField(choices=[('ZERO_T0_HUNDRED', '0 a 100 personas'), ('HUNDRED_TO_THREE_HUNDRED', '100 a 300 personas'), ('THREE_HUNDRED_TO_ONE_THOUSAND', '300 a 1000 personas'), ('ONE_THOUSAND_TO_TWENTY_ONE_THOUSAND_FIVE_HUNDRED', '1000 a 21.500 personas '), ('GREATER_THAN_TWENTY_ONE_THOUSAND_FIVE_HUNDRED', 'Mayor a 21.500 personas')], max_length=255, verbose_name='Number of students')),
                ('rankings_classification', models.CharField(max_length=255, verbose_name='Classification in ranking')),
                ('strengths', models.CharField(max_length=255, verbose_name='Strengths')),
                ('photography', models.ImageField(blank=True, null=True, upload_to='studyhosts', verbose_name='Photo')),
                ('knowledge_topics', taggit.managers.TaggableManager(help_text='A comma-separated list of topics.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Knowledge topics')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usuarios con perfil de anfitriones de estudio',
            },
        ),
    ]
